{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "abstract-contracts",
  "type": "registry:lib",
  "title": "Abstract Contracts",
  "author": "Abstract Foundation (https://build.abs.xyz)",
  "description": "Configuration for common Abstract network contract addresses and ABIs for tokens and DEX infrastructure",
  "dependencies": [],
  "registryDependencies": [],
  "files": [
    {
      "path": "types/contracts.ts",
      "content": "import type { Address, Abi } from \"viem\"\n\nexport interface ContractAddress {\n  mainnet?: Address\n  testnet?: Address\n}\n\nexport interface ContractInfo {\n  name: string\n  description: string\n  addresses: ContractAddress\n  abi?: Abi\n}\n\nexport interface ContractsConfig {\n  tokens: Record<string, ContractInfo>\n  dex: Record<string, ContractInfo>\n}\n\nexport type NetworkId = 2741 | 11124 // Abstract mainnet | Abstract testnet\n\nexport interface UseContractAddressOptions {\n  chainId?: NetworkId\n  throwOnMissing?: boolean\n}",
      "type": "registry:lib",
      "target": "types/contracts.ts"
    },
    {
      "path": "registry/new-york/blocks/abstract-contracts/lib/abstract-contracts.ts",
      "content": "import type { ContractsConfig } from \"@/types/contracts\";\n\nconst WETH9_ABI = [\n  {\n    anonymous: false,\n    inputs: [\n      { indexed: true, internalType: \"address\", name: \"src\", type: \"address\" },\n      { indexed: true, internalType: \"address\", name: \"guy\", type: \"address\" },\n      { indexed: false, internalType: \"uint256\", name: \"wad\", type: \"uint256\" },\n    ],\n    name: \"Approval\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      { indexed: true, internalType: \"address\", name: \"dst\", type: \"address\" },\n      { indexed: false, internalType: \"uint256\", name: \"wad\", type: \"uint256\" },\n    ],\n    name: \"Deposit\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      { indexed: true, internalType: \"address\", name: \"src\", type: \"address\" },\n      { indexed: true, internalType: \"address\", name: \"dst\", type: \"address\" },\n      { indexed: false, internalType: \"uint256\", name: \"wad\", type: \"uint256\" },\n    ],\n    name: \"Transfer\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      { indexed: true, internalType: \"address\", name: \"src\", type: \"address\" },\n      { indexed: false, internalType: \"uint256\", name: \"wad\", type: \"uint256\" },\n    ],\n    name: \"Withdrawal\",\n    type: \"event\",\n  },\n  {\n    inputs: [\n      { internalType: \"address\", name: \"\", type: \"address\" },\n      { internalType: \"address\", name: \"\", type: \"address\" },\n    ],\n    name: \"allowance\",\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"address\", name: \"guy\", type: \"address\" },\n      { internalType: \"uint256\", name: \"wad\", type: \"uint256\" },\n    ],\n    name: \"approve\",\n    outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\n    name: \"balanceOf\",\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"decimals\",\n    outputs: [{ internalType: \"uint8\", name: \"\", type: \"uint8\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"deposit\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"name\",\n    outputs: [{ internalType: \"string\", name: \"\", type: \"string\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"symbol\",\n    outputs: [{ internalType: \"string\", name: \"\", type: \"string\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"totalSupply\",\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"address\", name: \"dst\", type: \"address\" },\n      { internalType: \"uint256\", name: \"wad\", type: \"uint256\" },\n    ],\n    name: \"transfer\",\n    outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"address\", name: \"src\", type: \"address\" },\n      { internalType: \"address\", name: \"dst\", type: \"address\" },\n      { internalType: \"uint256\", name: \"wad\", type: \"uint256\" },\n    ],\n    name: \"transferFrom\",\n    outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [{ internalType: \"uint256\", name: \"wad\", type: \"uint256\" }],\n    name: \"withdraw\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  { stateMutability: \"payable\", type: \"receive\" },\n] as const;\n\nconst USDC_ABI = [\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"implementationContract\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"previousAdmin\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"newAdmin\",\n        type: \"address\",\n      },\n    ],\n    name: \"AdminChanged\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"implementation\",\n        type: \"address\",\n      },\n    ],\n    name: \"Upgraded\",\n    type: \"event\",\n  },\n  { stateMutability: \"payable\", type: \"fallback\" },\n  {\n    inputs: [],\n    name: \"admin\",\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [{ internalType: \"address\", name: \"newAdmin\", type: \"address\" }],\n    name: \"changeAdmin\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"implementation\",\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"address\", name: \"newImplementation\", type: \"address\" },\n    ],\n    name: \"upgradeTo\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"address\", name: \"newImplementation\", type: \"address\" },\n      { internalType: \"bytes\", name: \"data\", type: \"bytes\" },\n    ],\n    name: \"upgradeToAndCall\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n] as const;\n\nconst USDT_ABI = [\n  {\n    inputs: [\n      { internalType: \"address\", name: \"_logic\", type: \"address\" },\n      { internalType: \"address\", name: \"admin_\", type: \"address\" },\n      { internalType: \"bytes\", name: \"_data\", type: \"bytes\" },\n    ],\n    stateMutability: \"payable\",\n    type: \"constructor\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"previousAdmin\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"newAdmin\",\n        type: \"address\",\n      },\n    ],\n    name: \"AdminChanged\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"beacon\",\n        type: \"address\",\n      },\n    ],\n    name: \"BeaconUpgraded\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"implementation\",\n        type: \"address\",\n      },\n    ],\n    name: \"Upgraded\",\n    type: \"event\",\n  },\n  { stateMutability: \"payable\", type: \"fallback\" },\n  {\n    inputs: [],\n    name: \"admin\",\n    outputs: [{ internalType: \"address\", name: \"admin_\", type: \"address\" }],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [{ internalType: \"address\", name: \"newAdmin\", type: \"address\" }],\n    name: \"changeAdmin\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"implementation\",\n    outputs: [\n      { internalType: \"address\", name: \"implementation_\", type: \"address\" },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"address\", name: \"newImplementation\", type: \"address\" },\n    ],\n    name: \"upgradeTo\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"address\", name: \"newImplementation\", type: \"address\" },\n      { internalType: \"bytes\", name: \"data\", type: \"bytes\" },\n    ],\n    name: \"upgradeToAndCall\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  { stateMutability: \"payable\", type: \"receive\" },\n] as const;\n\nconst UNISWAP_V2_FACTORY_ABI = [\n  {\n    inputs: [\n      { internalType: \"address\", name: \"_feeToSetter\", type: \"address\" },\n    ],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"token0\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"token1\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"pair\",\n        type: \"address\",\n      },\n      { indexed: false, internalType: \"uint256\", name: \"\", type: \"uint256\" },\n    ],\n    name: \"PairCreated\",\n    type: \"event\",\n  },\n  {\n    constant: true,\n    inputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n    name: \"allPairs\",\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"allPairsLength\",\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [\n      { internalType: \"address\", name: \"tokenA\", type: \"address\" },\n      { internalType: \"address\", name: \"tokenB\", type: \"address\" },\n    ],\n    name: \"createPair\",\n    outputs: [{ internalType: \"address\", name: \"pair\", type: \"address\" }],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"feeTo\",\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"feeToSetter\",\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [\n      { internalType: \"address\", name: \"\", type: \"address\" },\n      { internalType: \"address\", name: \"\", type: \"address\" },\n    ],\n    name: \"getPair\",\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [{ internalType: \"address\", name: \"_feeTo\", type: \"address\" }],\n    name: \"setFeeTo\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [\n      { internalType: \"address\", name: \"_feeToSetter\", type: \"address\" },\n    ],\n    name: \"setFeeToSetter\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n] as const;\n\nconst UNISWAP_V2_ROUTER_ABI = [\n  {\n    inputs: [\n      { internalType: \"address\", name: \"_factory\", type: \"address\" },\n      { internalType: \"address\", name: \"_WETH\", type: \"address\" },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    inputs: [],\n    name: \"WETH\",\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"address\", name: \"tokenA\", type: \"address\" },\n      { internalType: \"address\", name: \"tokenB\", type: \"address\" },\n      { internalType: \"uint256\", name: \"amountADesired\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"amountBDesired\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"amountAMin\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"amountBMin\", type: \"uint256\" },\n      { internalType: \"address\", name: \"to\", type: \"address\" },\n      { internalType: \"uint256\", name: \"deadline\", type: \"uint256\" },\n    ],\n    name: \"addLiquidity\",\n    outputs: [\n      { internalType: \"uint256\", name: \"amountA\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"amountB\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"liquidity\", type: \"uint256\" },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"address\", name: \"token\", type: \"address\" },\n      { internalType: \"uint256\", name: \"amountTokenDesired\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"amountTokenMin\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"amountETHMin\", type: \"uint256\" },\n      { internalType: \"address\", name: \"to\", type: \"address\" },\n      { internalType: \"uint256\", name: \"deadline\", type: \"uint256\" },\n    ],\n    name: \"addLiquidityETH\",\n    outputs: [\n      { internalType: \"uint256\", name: \"amountToken\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"amountETH\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"liquidity\", type: \"uint256\" },\n    ],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"factory\",\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"uint256\", name: \"amountOut\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"reserveIn\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"reserveOut\", type: \"uint256\" },\n    ],\n    name: \"getAmountIn\",\n    outputs: [{ internalType: \"uint256\", name: \"amountIn\", type: \"uint256\" }],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"uint256\", name: \"amountIn\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"reserveIn\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"reserveOut\", type: \"uint256\" },\n    ],\n    name: \"getAmountOut\",\n    outputs: [{ internalType: \"uint256\", name: \"amountOut\", type: \"uint256\" }],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"uint256\", name: \"amountOut\", type: \"uint256\" },\n      { internalType: \"address[]\", name: \"path\", type: \"address[]\" },\n    ],\n    name: \"getAmountsIn\",\n    outputs: [\n      { internalType: \"uint256[]\", name: \"amounts\", type: \"uint256[]\" },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"uint256\", name: \"amountIn\", type: \"uint256\" },\n      { internalType: \"address[]\", name: \"path\", type: \"address[]\" },\n    ],\n    name: \"getAmountsOut\",\n    outputs: [\n      { internalType: \"uint256[]\", name: \"amounts\", type: \"uint256[]\" },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"uint256\", name: \"amountA\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"reserveA\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"reserveB\", type: \"uint256\" },\n    ],\n    name: \"quote\",\n    outputs: [{ internalType: \"uint256\", name: \"amountB\", type: \"uint256\" }],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"address\", name: \"tokenA\", type: \"address\" },\n      { internalType: \"address\", name: \"tokenB\", type: \"address\" },\n      { internalType: \"uint256\", name: \"liquidity\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"amountAMin\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"amountBMin\", type: \"uint256\" },\n      { internalType: \"address\", name: \"to\", type: \"address\" },\n      { internalType: \"uint256\", name: \"deadline\", type: \"uint256\" },\n    ],\n    name: \"removeLiquidity\",\n    outputs: [\n      { internalType: \"uint256\", name: \"amountA\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"amountB\", type: \"uint256\" },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"address\", name: \"token\", type: \"address\" },\n      { internalType: \"uint256\", name: \"liquidity\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"amountTokenMin\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"amountETHMin\", type: \"uint256\" },\n      { internalType: \"address\", name: \"to\", type: \"address\" },\n      { internalType: \"uint256\", name: \"deadline\", type: \"uint256\" },\n    ],\n    name: \"removeLiquidityETH\",\n    outputs: [\n      { internalType: \"uint256\", name: \"amountToken\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"amountETH\", type: \"uint256\" },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"address\", name: \"token\", type: \"address\" },\n      { internalType: \"uint256\", name: \"liquidity\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"amountTokenMin\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"amountETHMin\", type: \"uint256\" },\n      { internalType: \"address\", name: \"to\", type: \"address\" },\n      { internalType: \"uint256\", name: \"deadline\", type: \"uint256\" },\n    ],\n    name: \"removeLiquidityETHSupportingFeeOnTransferTokens\",\n    outputs: [{ internalType: \"uint256\", name: \"amountETH\", type: \"uint256\" }],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"address\", name: \"token\", type: \"address\" },\n      { internalType: \"uint256\", name: \"liquidity\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"amountTokenMin\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"amountETHMin\", type: \"uint256\" },\n      { internalType: \"address\", name: \"to\", type: \"address\" },\n      { internalType: \"uint256\", name: \"deadline\", type: \"uint256\" },\n      { internalType: \"bool\", name: \"approveMax\", type: \"bool\" },\n      { internalType: \"uint8\", name: \"v\", type: \"uint8\" },\n      { internalType: \"bytes32\", name: \"r\", type: \"bytes32\" },\n      { internalType: \"bytes32\", name: \"s\", type: \"bytes32\" },\n    ],\n    name: \"removeLiquidityETHWithPermit\",\n    outputs: [\n      { internalType: \"uint256\", name: \"amountToken\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"amountETH\", type: \"uint256\" },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"address\", name: \"token\", type: \"address\" },\n      { internalType: \"uint256\", name: \"liquidity\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"amountTokenMin\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"amountETHMin\", type: \"uint256\" },\n      { internalType: \"address\", name: \"to\", type: \"address\" },\n      { internalType: \"uint256\", name: \"deadline\", type: \"uint256\" },\n      { internalType: \"bool\", name: \"approveMax\", type: \"bool\" },\n      { internalType: \"uint8\", name: \"v\", type: \"uint8\" },\n      { internalType: \"bytes32\", name: \"r\", type: \"bytes32\" },\n      { internalType: \"bytes32\", name: \"s\", type: \"bytes32\" },\n    ],\n    name: \"removeLiquidityETHWithPermitSupportingFeeOnTransferTokens\",\n    outputs: [{ internalType: \"uint256\", name: \"amountETH\", type: \"uint256\" }],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"address\", name: \"tokenA\", type: \"address\" },\n      { internalType: \"address\", name: \"tokenB\", type: \"address\" },\n      { internalType: \"uint256\", name: \"liquidity\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"amountAMin\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"amountBMin\", type: \"uint256\" },\n      { internalType: \"address\", name: \"to\", type: \"address\" },\n      { internalType: \"uint256\", name: \"deadline\", type: \"uint256\" },\n      { internalType: \"bool\", name: \"approveMax\", type: \"bool\" },\n      { internalType: \"uint8\", name: \"v\", type: \"uint8\" },\n      { internalType: \"bytes32\", name: \"r\", type: \"bytes32\" },\n      { internalType: \"bytes32\", name: \"s\", type: \"bytes32\" },\n    ],\n    name: \"removeLiquidityWithPermit\",\n    outputs: [\n      { internalType: \"uint256\", name: \"amountA\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"amountB\", type: \"uint256\" },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"uint256\", name: \"amountOut\", type: \"uint256\" },\n      { internalType: \"address[]\", name: \"path\", type: \"address[]\" },\n      { internalType: \"address\", name: \"to\", type: \"address\" },\n      { internalType: \"uint256\", name: \"deadline\", type: \"uint256\" },\n    ],\n    name: \"swapETHForExactTokens\",\n    outputs: [\n      { internalType: \"uint256[]\", name: \"amounts\", type: \"uint256[]\" },\n    ],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"uint256\", name: \"amountOutMin\", type: \"uint256\" },\n      { internalType: \"address[]\", name: \"path\", type: \"address[]\" },\n      { internalType: \"address\", name: \"to\", type: \"address\" },\n      { internalType: \"uint256\", name: \"deadline\", type: \"uint256\" },\n    ],\n    name: \"swapExactETHForTokens\",\n    outputs: [\n      { internalType: \"uint256[]\", name: \"amounts\", type: \"uint256[]\" },\n    ],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"uint256\", name: \"amountOutMin\", type: \"uint256\" },\n      { internalType: \"address[]\", name: \"path\", type: \"address[]\" },\n      { internalType: \"address\", name: \"to\", type: \"address\" },\n      { internalType: \"uint256\", name: \"deadline\", type: \"uint256\" },\n    ],\n    name: \"swapExactETHForTokensSupportingFeeOnTransferTokens\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"uint256\", name: \"amountIn\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"amountOutMin\", type: \"uint256\" },\n      { internalType: \"address[]\", name: \"path\", type: \"address[]\" },\n      { internalType: \"address\", name: \"to\", type: \"address\" },\n      { internalType: \"uint256\", name: \"deadline\", type: \"uint256\" },\n    ],\n    name: \"swapExactTokensForETH\",\n    outputs: [\n      { internalType: \"uint256[]\", name: \"amounts\", type: \"uint256[]\" },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"uint256\", name: \"amountIn\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"amountOutMin\", type: \"uint256\" },\n      { internalType: \"address[]\", name: \"path\", type: \"address[]\" },\n      { internalType: \"address\", name: \"to\", type: \"address\" },\n      { internalType: \"uint256\", name: \"deadline\", type: \"uint256\" },\n    ],\n    name: \"swapExactTokensForETHSupportingFeeOnTransferTokens\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"uint256\", name: \"amountIn\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"amountOutMin\", type: \"uint256\" },\n      { internalType: \"address[]\", name: \"path\", type: \"address[]\" },\n      { internalType: \"address\", name: \"to\", type: \"address\" },\n      { internalType: \"uint256\", name: \"deadline\", type: \"uint256\" },\n    ],\n    name: \"swapExactTokensForTokens\",\n    outputs: [\n      { internalType: \"uint256[]\", name: \"amounts\", type: \"uint256[]\" },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"uint256\", name: \"amountIn\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"amountOutMin\", type: \"uint256\" },\n      { internalType: \"address[]\", name: \"path\", type: \"address[]\" },\n      { internalType: \"address\", name: \"to\", type: \"address\" },\n      { internalType: \"uint256\", name: \"deadline\", type: \"uint256\" },\n    ],\n    name: \"swapExactTokensForTokensSupportingFeeOnTransferTokens\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"uint256\", name: \"amountOut\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"amountInMax\", type: \"uint256\" },\n      { internalType: \"address[]\", name: \"path\", type: \"address[]\" },\n      { internalType: \"address\", name: \"to\", type: \"address\" },\n      { internalType: \"uint256\", name: \"deadline\", type: \"uint256\" },\n    ],\n    name: \"swapTokensForExactETH\",\n    outputs: [\n      { internalType: \"uint256[]\", name: \"amounts\", type: \"uint256[]\" },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"uint256\", name: \"amountOut\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"amountInMax\", type: \"uint256\" },\n      { internalType: \"address[]\", name: \"path\", type: \"address[]\" },\n      { internalType: \"address\", name: \"to\", type: \"address\" },\n      { internalType: \"uint256\", name: \"deadline\", type: \"uint256\" },\n    ],\n    name: \"swapTokensForExactTokens\",\n    outputs: [\n      { internalType: \"uint256[]\", name: \"amounts\", type: \"uint256[]\" },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  { stateMutability: \"payable\", type: \"receive\" },\n] as const;\n\nconst UNISWAP_V3_FACTORY_ABI = [\n  { inputs: [], stateMutability: \"nonpayable\", type: \"constructor\" },\n  {\n    anonymous: false,\n    inputs: [\n      { indexed: true, internalType: \"uint24\", name: \"fee\", type: \"uint24\" },\n      {\n        indexed: true,\n        internalType: \"int24\",\n        name: \"tickSpacing\",\n        type: \"int24\",\n      },\n    ],\n    name: \"FeeAmountEnabled\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"oldOwner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"newOwner\",\n        type: \"address\",\n      },\n    ],\n    name: \"OwnerChanged\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"token0\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"token1\",\n        type: \"address\",\n      },\n      { indexed: true, internalType: \"uint24\", name: \"fee\", type: \"uint24\" },\n      {\n        indexed: false,\n        internalType: \"int24\",\n        name: \"tickSpacing\",\n        type: \"int24\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"pool\",\n        type: \"address\",\n      },\n    ],\n    name: \"PoolCreated\",\n    type: \"event\",\n  },\n  {\n    inputs: [\n      { internalType: \"address\", name: \"tokenA\", type: \"address\" },\n      { internalType: \"address\", name: \"tokenB\", type: \"address\" },\n      { internalType: \"uint24\", name: \"fee\", type: \"uint24\" },\n    ],\n    name: \"createPool\",\n    outputs: [{ internalType: \"address\", name: \"pool\", type: \"address\" }],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"uint24\", name: \"fee\", type: \"uint24\" },\n      { internalType: \"int24\", name: \"tickSpacing\", type: \"int24\" },\n    ],\n    name: \"enableFeeAmount\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [{ internalType: \"uint24\", name: \"\", type: \"uint24\" }],\n    name: \"feeAmountTickSpacing\",\n    outputs: [{ internalType: \"int24\", name: \"\", type: \"int24\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"address\", name: \"\", type: \"address\" },\n      { internalType: \"address\", name: \"\", type: \"address\" },\n      { internalType: \"uint24\", name: \"\", type: \"uint24\" },\n    ],\n    name: \"getPool\",\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"owner\",\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"parameters\",\n    outputs: [\n      { internalType: \"address\", name: \"factory\", type: \"address\" },\n      { internalType: \"address\", name: \"token0\", type: \"address\" },\n      { internalType: \"address\", name: \"token1\", type: \"address\" },\n      { internalType: \"uint24\", name: \"fee\", type: \"uint24\" },\n      { internalType: \"int24\", name: \"tickSpacing\", type: \"int24\" },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [{ internalType: \"address\", name: \"_owner\", type: \"address\" }],\n    name: \"setOwner\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n] as const;\n\nconst QUOTER_V2_ABI = [\n  {\n    inputs: [\n      { internalType: \"address\", name: \"_factory\", type: \"address\" },\n      { internalType: \"address\", name: \"_WETH9\", type: \"address\" },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    inputs: [],\n    name: \"WETH9\",\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"factory\",\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"bytes\", name: \"path\", type: \"bytes\" },\n      { internalType: \"uint256\", name: \"amountIn\", type: \"uint256\" },\n    ],\n    name: \"quoteExactInput\",\n    outputs: [\n      { internalType: \"uint256\", name: \"amountOut\", type: \"uint256\" },\n      {\n        internalType: \"uint160[]\",\n        name: \"sqrtPriceX96AfterList\",\n        type: \"uint160[]\",\n      },\n      {\n        internalType: \"uint32[]\",\n        name: \"initializedTicksCrossedList\",\n        type: \"uint32[]\",\n      },\n      { internalType: \"uint256\", name: \"gasEstimate\", type: \"uint256\" },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          { internalType: \"address\", name: \"tokenIn\", type: \"address\" },\n          { internalType: \"address\", name: \"tokenOut\", type: \"address\" },\n          { internalType: \"uint256\", name: \"amountIn\", type: \"uint256\" },\n          { internalType: \"uint24\", name: \"fee\", type: \"uint24\" },\n          {\n            internalType: \"uint160\",\n            name: \"sqrtPriceLimitX96\",\n            type: \"uint160\",\n          },\n        ],\n        internalType: \"struct IQuoterV2.QuoteExactInputSingleParams\",\n        name: \"params\",\n        type: \"tuple\",\n      },\n    ],\n    name: \"quoteExactInputSingle\",\n    outputs: [\n      { internalType: \"uint256\", name: \"amountOut\", type: \"uint256\" },\n      { internalType: \"uint160\", name: \"sqrtPriceX96After\", type: \"uint160\" },\n      {\n        internalType: \"uint32\",\n        name: \"initializedTicksCrossed\",\n        type: \"uint32\",\n      },\n      { internalType: \"uint256\", name: \"gasEstimate\", type: \"uint256\" },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"bytes\", name: \"path\", type: \"bytes\" },\n      { internalType: \"uint256\", name: \"amountOut\", type: \"uint256\" },\n    ],\n    name: \"quoteExactOutput\",\n    outputs: [\n      { internalType: \"uint256\", name: \"amountIn\", type: \"uint256\" },\n      {\n        internalType: \"uint160[]\",\n        name: \"sqrtPriceX96AfterList\",\n        type: \"uint160[]\",\n      },\n      {\n        internalType: \"uint32[]\",\n        name: \"initializedTicksCrossedList\",\n        type: \"uint32[]\",\n      },\n      { internalType: \"uint256\", name: \"gasEstimate\", type: \"uint256\" },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          { internalType: \"address\", name: \"tokenIn\", type: \"address\" },\n          { internalType: \"address\", name: \"tokenOut\", type: \"address\" },\n          { internalType: \"uint256\", name: \"amount\", type: \"uint256\" },\n          { internalType: \"uint24\", name: \"fee\", type: \"uint24\" },\n          {\n            internalType: \"uint160\",\n            name: \"sqrtPriceLimitX96\",\n            type: \"uint160\",\n          },\n        ],\n        internalType: \"struct IQuoterV2.QuoteExactOutputSingleParams\",\n        name: \"params\",\n        type: \"tuple\",\n      },\n    ],\n    name: \"quoteExactOutputSingle\",\n    outputs: [\n      { internalType: \"uint256\", name: \"amountIn\", type: \"uint256\" },\n      { internalType: \"uint160\", name: \"sqrtPriceX96After\", type: \"uint160\" },\n      {\n        internalType: \"uint32\",\n        name: \"initializedTicksCrossed\",\n        type: \"uint32\",\n      },\n      { internalType: \"uint256\", name: \"gasEstimate\", type: \"uint256\" },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"int256\", name: \"amount0Delta\", type: \"int256\" },\n      { internalType: \"int256\", name: \"amount1Delta\", type: \"int256\" },\n      { internalType: \"bytes\", name: \"path\", type: \"bytes\" },\n    ],\n    name: \"uniswapV3SwapCallback\",\n    outputs: [],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n] as const;\n\nconst SWAP_ROUTER_02_ABI = [\n  {\n    inputs: [\n      { internalType: \"address\", name: \"_factoryV2\", type: \"address\" },\n      { internalType: \"address\", name: \"factoryV3\", type: \"address\" },\n      { internalType: \"address\", name: \"_positionManager\", type: \"address\" },\n      { internalType: \"address\", name: \"_WETH9\", type: \"address\" },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    inputs: [],\n    name: \"WETH9\",\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [{ internalType: \"address\", name: \"token\", type: \"address\" }],\n    name: \"approveMax\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [{ internalType: \"address\", name: \"token\", type: \"address\" }],\n    name: \"approveMaxMinusOne\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [{ internalType: \"address\", name: \"token\", type: \"address\" }],\n    name: \"approveZeroThenMax\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [{ internalType: \"address\", name: \"token\", type: \"address\" }],\n    name: \"approveZeroThenMaxMinusOne\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [{ internalType: \"bytes\", name: \"data\", type: \"bytes\" }],\n    name: \"callPositionManager\",\n    outputs: [{ internalType: \"bytes\", name: \"result\", type: \"bytes\" }],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"bytes[]\", name: \"paths\", type: \"bytes[]\" },\n      { internalType: \"uint128[]\", name: \"amounts\", type: \"uint128[]\" },\n      { internalType: \"uint24\", name: \"maximumTickDivergence\", type: \"uint24\" },\n      { internalType: \"uint32\", name: \"secondsAgo\", type: \"uint32\" },\n    ],\n    name: \"checkOracleSlippage\",\n    outputs: [],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"bytes\", name: \"path\", type: \"bytes\" },\n      { internalType: \"uint24\", name: \"maximumTickDivergence\", type: \"uint24\" },\n      { internalType: \"uint32\", name: \"secondsAgo\", type: \"uint32\" },\n    ],\n    name: \"checkOracleSlippage\",\n    outputs: [],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          { internalType: \"bytes\", name: \"path\", type: \"bytes\" },\n          { internalType: \"address\", name: \"recipient\", type: \"address\" },\n          { internalType: \"uint256\", name: \"amountIn\", type: \"uint256\" },\n          {\n            internalType: \"uint256\",\n            name: \"amountOutMinimum\",\n            type: \"uint256\",\n          },\n        ],\n        internalType: \"struct IV3SwapRouter.ExactInputParams\",\n        name: \"params\",\n        type: \"tuple\",\n      },\n    ],\n    name: \"exactInput\",\n    outputs: [{ internalType: \"uint256\", name: \"amountOut\", type: \"uint256\" }],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          { internalType: \"address\", name: \"tokenIn\", type: \"address\" },\n          { internalType: \"address\", name: \"tokenOut\", type: \"address\" },\n          { internalType: \"uint24\", name: \"fee\", type: \"uint24\" },\n          { internalType: \"address\", name: \"recipient\", type: \"address\" },\n          { internalType: \"uint256\", name: \"amountIn\", type: \"uint256\" },\n          {\n            internalType: \"uint256\",\n            name: \"amountOutMinimum\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint160\",\n            name: \"sqrtPriceLimitX96\",\n            type: \"uint160\",\n          },\n        ],\n        internalType: \"struct IV3SwapRouter.ExactInputSingleParams\",\n        name: \"params\",\n        type: \"tuple\",\n      },\n    ],\n    name: \"exactInputSingle\",\n    outputs: [{ internalType: \"uint256\", name: \"amountOut\", type: \"uint256\" }],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          { internalType: \"bytes\", name: \"path\", type: \"bytes\" },\n          { internalType: \"address\", name: \"recipient\", type: \"address\" },\n          { internalType: \"uint256\", name: \"amountOut\", type: \"uint256\" },\n          { internalType: \"uint256\", name: \"amountInMaximum\", type: \"uint256\" },\n        ],\n        internalType: \"struct IV3SwapRouter.ExactOutputParams\",\n        name: \"params\",\n        type: \"tuple\",\n      },\n    ],\n    name: \"exactOutput\",\n    outputs: [{ internalType: \"uint256\", name: \"amountIn\", type: \"uint256\" }],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          { internalType: \"address\", name: \"tokenIn\", type: \"address\" },\n          { internalType: \"address\", name: \"tokenOut\", type: \"address\" },\n          { internalType: \"uint24\", name: \"fee\", type: \"uint24\" },\n          { internalType: \"address\", name: \"recipient\", type: \"address\" },\n          { internalType: \"uint256\", name: \"amountOut\", type: \"uint256\" },\n          { internalType: \"uint256\", name: \"amountInMaximum\", type: \"uint256\" },\n          {\n            internalType: \"uint160\",\n            name: \"sqrtPriceLimitX96\",\n            type: \"uint160\",\n          },\n        ],\n        internalType: \"struct IV3SwapRouter.ExactOutputSingleParams\",\n        name: \"params\",\n        type: \"tuple\",\n      },\n    ],\n    name: \"exactOutputSingle\",\n    outputs: [{ internalType: \"uint256\", name: \"amountIn\", type: \"uint256\" }],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"factory\",\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"factoryV2\",\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"address\", name: \"token\", type: \"address\" },\n      { internalType: \"uint256\", name: \"amount\", type: \"uint256\" },\n    ],\n    name: \"getApprovalType\",\n    outputs: [\n      {\n        internalType: \"enum IApproveAndCall.ApprovalType\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          { internalType: \"address\", name: \"token0\", type: \"address\" },\n          { internalType: \"address\", name: \"token1\", type: \"address\" },\n          { internalType: \"uint256\", name: \"tokenId\", type: \"uint256\" },\n          { internalType: \"uint256\", name: \"amount0Min\", type: \"uint256\" },\n          { internalType: \"uint256\", name: \"amount1Min\", type: \"uint256\" },\n        ],\n        internalType: \"struct IApproveAndCall.IncreaseLiquidityParams\",\n        name: \"params\",\n        type: \"tuple\",\n      },\n    ],\n    name: \"increaseLiquidity\",\n    outputs: [{ internalType: \"bytes\", name: \"result\", type: \"bytes\" }],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          { internalType: \"address\", name: \"token0\", type: \"address\" },\n          { internalType: \"address\", name: \"token1\", type: \"address\" },\n          { internalType: \"uint24\", name: \"fee\", type: \"uint24\" },\n          { internalType: \"int24\", name: \"tickLower\", type: \"int24\" },\n          { internalType: \"int24\", name: \"tickUpper\", type: \"int24\" },\n          { internalType: \"uint256\", name: \"amount0Min\", type: \"uint256\" },\n          { internalType: \"uint256\", name: \"amount1Min\", type: \"uint256\" },\n          { internalType: \"address\", name: \"recipient\", type: \"address\" },\n        ],\n        internalType: \"struct IApproveAndCall.MintParams\",\n        name: \"params\",\n        type: \"tuple\",\n      },\n    ],\n    name: \"mint\",\n    outputs: [{ internalType: \"bytes\", name: \"result\", type: \"bytes\" }],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"bytes32\", name: \"previousBlockhash\", type: \"bytes32\" },\n      { internalType: \"bytes[]\", name: \"data\", type: \"bytes[]\" },\n    ],\n    name: \"multicall\",\n    outputs: [{ internalType: \"bytes[]\", name: \"\", type: \"bytes[]\" }],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"uint256\", name: \"deadline\", type: \"uint256\" },\n      { internalType: \"bytes[]\", name: \"data\", type: \"bytes[]\" },\n    ],\n    name: \"multicall\",\n    outputs: [{ internalType: \"bytes[]\", name: \"\", type: \"bytes[]\" }],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [{ internalType: \"bytes[]\", name: \"data\", type: \"bytes[]\" }],\n    name: \"multicall\",\n    outputs: [{ internalType: \"bytes[]\", name: \"results\", type: \"bytes[]\" }],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"positionManager\",\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"address\", name: \"token\", type: \"address\" },\n      { internalType: \"uint256\", name: \"value\", type: \"uint256\" },\n    ],\n    name: \"pull\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"refundETH\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"address\", name: \"token\", type: \"address\" },\n      { internalType: \"uint256\", name: \"value\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"deadline\", type: \"uint256\" },\n      { internalType: \"uint8\", name: \"v\", type: \"uint8\" },\n      { internalType: \"bytes32\", name: \"r\", type: \"bytes32\" },\n      { internalType: \"bytes32\", name: \"s\", type: \"bytes32\" },\n    ],\n    name: \"selfPermit\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"address\", name: \"token\", type: \"address\" },\n      { internalType: \"uint256\", name: \"nonce\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"expiry\", type: \"uint256\" },\n      { internalType: \"uint8\", name: \"v\", type: \"uint8\" },\n      { internalType: \"bytes32\", name: \"r\", type: \"bytes32\" },\n      { internalType: \"bytes32\", name: \"s\", type: \"bytes32\" },\n    ],\n    name: \"selfPermitAllowed\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"address\", name: \"token\", type: \"address\" },\n      { internalType: \"uint256\", name: \"nonce\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"expiry\", type: \"uint256\" },\n      { internalType: \"uint8\", name: \"v\", type: \"uint8\" },\n      { internalType: \"bytes32\", name: \"r\", type: \"bytes32\" },\n      { internalType: \"bytes32\", name: \"s\", type: \"bytes32\" },\n    ],\n    name: \"selfPermitAllowedIfNecessary\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"address\", name: \"token\", type: \"address\" },\n      { internalType: \"uint256\", name: \"value\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"deadline\", type: \"uint256\" },\n      { internalType: \"uint8\", name: \"v\", type: \"uint8\" },\n      { internalType: \"bytes32\", name: \"r\", type: \"bytes32\" },\n      { internalType: \"bytes32\", name: \"s\", type: \"bytes32\" },\n    ],\n    name: \"selfPermitIfNecessary\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"uint256\", name: \"amountIn\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"amountOutMin\", type: \"uint256\" },\n      { internalType: \"address[]\", name: \"path\", type: \"address[]\" },\n      { internalType: \"address\", name: \"to\", type: \"address\" },\n    ],\n    name: \"swapExactTokensForTokens\",\n    outputs: [{ internalType: \"uint256\", name: \"amountOut\", type: \"uint256\" }],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"uint256\", name: \"amountOut\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"amountInMax\", type: \"uint256\" },\n      { internalType: \"address[]\", name: \"path\", type: \"address[]\" },\n      { internalType: \"address\", name: \"to\", type: \"address\" },\n    ],\n    name: \"swapTokensForExactTokens\",\n    outputs: [{ internalType: \"uint256\", name: \"amountIn\", type: \"uint256\" }],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"address\", name: \"token\", type: \"address\" },\n      { internalType: \"uint256\", name: \"amountMinimum\", type: \"uint256\" },\n      { internalType: \"address\", name: \"recipient\", type: \"address\" },\n    ],\n    name: \"sweepToken\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"address\", name: \"token\", type: \"address\" },\n      { internalType: \"uint256\", name: \"amountMinimum\", type: \"uint256\" },\n    ],\n    name: \"sweepToken\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"address\", name: \"token\", type: \"address\" },\n      { internalType: \"uint256\", name: \"amountMinimum\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"feeBips\", type: \"uint256\" },\n      { internalType: \"address\", name: \"feeRecipient\", type: \"address\" },\n    ],\n    name: \"sweepTokenWithFee\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"address\", name: \"token\", type: \"address\" },\n      { internalType: \"uint256\", name: \"amountMinimum\", type: \"uint256\" },\n      { internalType: \"address\", name: \"recipient\", type: \"address\" },\n      { internalType: \"uint256\", name: \"feeBips\", type: \"uint256\" },\n      { internalType: \"address\", name: \"feeRecipient\", type: \"address\" },\n    ],\n    name: \"sweepTokenWithFee\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"int256\", name: \"amount0Delta\", type: \"int256\" },\n      { internalType: \"int256\", name: \"amount1Delta\", type: \"int256\" },\n      { internalType: \"bytes\", name: \"_data\", type: \"bytes\" },\n    ],\n    name: \"uniswapV3SwapCallback\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"uint256\", name: \"amountMinimum\", type: \"uint256\" },\n      { internalType: \"address\", name: \"recipient\", type: \"address\" },\n    ],\n    name: \"unwrapWETH9\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"uint256\", name: \"amountMinimum\", type: \"uint256\" },\n    ],\n    name: \"unwrapWETH9\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"uint256\", name: \"amountMinimum\", type: \"uint256\" },\n      { internalType: \"address\", name: \"recipient\", type: \"address\" },\n      { internalType: \"uint256\", name: \"feeBips\", type: \"uint256\" },\n      { internalType: \"address\", name: \"feeRecipient\", type: \"address\" },\n    ],\n    name: \"unwrapWETH9WithFee\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"uint256\", name: \"amountMinimum\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"feeBips\", type: \"uint256\" },\n      { internalType: \"address\", name: \"feeRecipient\", type: \"address\" },\n    ],\n    name: \"unwrapWETH9WithFee\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [{ internalType: \"uint256\", name: \"value\", type: \"uint256\" }],\n    name: \"wrapETH\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  { stateMutability: \"payable\", type: \"receive\" },\n] as const;\n\nexport const ABSTRACT_CONTRACTS: ContractsConfig = {\n  tokens: {\n    weth: {\n      name: \"Wrapped Ether\",\n      description: \"WETH9 - Wrapped Ether contract for Abstract\",\n      addresses: {\n        mainnet: \"0x3439153EB7AF838Ad19d56E1571FBD09333C2809\",\n        testnet: \"0x9EDCde0257F2386Ce177C3a7FCdd97787F0D841d\",\n      } as const,\n      abi: WETH9_ABI,\n    },\n    usdc: {\n      name: \"USD Coin\",\n      description: \"USDC - Circle's stablecoin on Abstract\",\n      addresses: {\n        mainnet: \"0x84A71ccD554Cc1b02749b35d22F684CC8ec987e1\",\n        testnet: \"0xe4C7fBB0a626ed208021ccabA6Be1566905E2dFc\",\n      } as const,\n      abi: USDC_ABI,\n    },\n    usdt: {\n      name: \"Tether USD\",\n      description: \"USDT - Tether's stablecoin on Abstract\",\n      addresses: {\n        mainnet: \"0x0709F39376dEEe2A2dfC94A58EdEb2Eb9DF012bD\",\n        // Note: No testnet address available for USDT.\n      } as const,\n      abi: USDT_ABI,\n    },\n  },\n  dex: {\n    uniswapV2Factory: {\n      name: \"Uniswap V2 Factory\",\n      description: \"Factory contract for creating Uniswap V2 pairs\",\n      addresses: {\n        mainnet: \"0x566d7510dEE58360a64C9827257cF6D0Dc43985E\",\n        testnet: \"0x566d7510dEE58360a64C9827257cF6D0Dc43985E\",\n      } as const,\n      abi: UNISWAP_V2_FACTORY_ABI,\n    },\n    uniswapV2Router: {\n      name: \"Uniswap V2 Router02\",\n      description: \"Router contract for Uniswap V2 swaps and liquidity\",\n      addresses: {\n        mainnet: \"0xad1eCa41E6F772bE3cb5A48A6141f9bcc1AF9F7c\",\n        testnet: \"0x96ff7D9dbf52FdcAe79157d3b249282c7FABd409\",\n      } as const,\n      abi: UNISWAP_V2_ROUTER_ABI,\n    },\n    uniswapV3Factory: {\n      name: \"Uniswap V3 Factory\",\n      description: \"Factory contract for creating Uniswap V3 pools\",\n      addresses: {\n        mainnet: \"0xA1160e73B63F322ae88cC2d8E700833e71D0b2a1\",\n        testnet: \"0x2E17FF9b877661bDFEF8879a4B31665157a960F0\",\n      } as const,\n      abi: UNISWAP_V3_FACTORY_ABI,\n    },\n    quoterV2: {\n      name: \"Quoter V2\",\n      description: \"Uniswap V3 quoter for getting swap quotes\",\n      addresses: {\n        mainnet: \"0x728BD3eC25D5EDBafebB84F3d67367Cd9EBC7693\",\n        testnet: \"0xdE41045eb15C8352413199f35d6d1A32803DaaE2\",\n      } as const,\n      abi: QUOTER_V2_ABI,\n    },\n    swapRouter02: {\n      name: \"Swap Router 02\",\n      description: \"Uniswap V3 router for executing swaps\",\n      addresses: {\n        mainnet: \"0x7712FA47387542819d4E35A23f8116C90C18767C\",\n        testnet: \"0xb9D4347d129a83cBC40499Cd4fF223dE172a70dF\",\n      } as const,\n      abi: SWAP_ROUTER_02_ABI,\n    },\n  },\n};\n\n// Export individual ABIs for easy importing\nexport {\n  WETH9_ABI,\n  USDC_ABI,\n  USDT_ABI,\n  UNISWAP_V2_FACTORY_ABI,\n  UNISWAP_V2_ROUTER_ABI,\n  UNISWAP_V3_FACTORY_ABI,\n  QUOTER_V2_ABI,\n  SWAP_ROUTER_02_ABI,\n};\n",
      "type": "registry:lib",
      "target": "config/abstract-contracts.ts"
    },
    {
      "path": "registry/new-york/blocks/abstract-contracts/lib/chain-utils.ts",
      "content": "import type {\n  NetworkId,\n  ContractAddress,\n  ContractInfo,\n} from \"@/types/contracts\";\nimport { abstract, abstractTestnet } from \"viem/chains\";\nimport { chain } from \"@/config/chain\";\nimport type { Address } from \"viem\";\nimport { ABSTRACT_CONTRACTS } from \"@/registry/new-york/blocks/abstract-contracts/lib/abstract-contracts\";\n\nexport function getNetworkName(chainId: NetworkId): string {\n  switch (chainId) {\n    case abstract.id:\n      return \"Abstract Mainnet\";\n    case abstractTestnet.id:\n      return \"Abstract Testnet\";\n    default:\n      return \"Unknown Network\";\n  }\n}\n\nexport function isAbstractNetwork(chainId: number): chainId is NetworkId {\n  return chainId === abstract.id || chainId === abstractTestnet.id;\n}\n\nexport function getContractAddress(\n  addresses: ContractAddress,\n  chainId: NetworkId\n): Address {\n  const address =\n    chainId === abstract.id ? addresses.mainnet : addresses.testnet;\n\n  if (!address) {\n    const networkName = getNetworkName(chainId);\n    throw new Error(`Contract address not available on ${networkName}`);\n  }\n\n  return address;\n}\n\nfunction findContractInCategories(contractKey: string): ContractInfo | null {\n  for (const category of Object.values(ABSTRACT_CONTRACTS)) {\n    if (typeof category === \"object\" && category[contractKey]) {\n      return category[contractKey];\n    }\n  }\n  return null;\n}\n\nexport function findContract(contractKey: string): ContractInfo | null {\n  return findContractInCategories(contractKey);\n}\n\nexport function getContract(\n  contractKey: string,\n  chainId: NetworkId\n): ContractInfo & { address: Address } {\n  const contract = findContractInCategories(contractKey);\n\n  if (!contract) {\n    throw new Error(`Contract \"${contractKey}\" not found`);\n  }\n\n  if (!isAbstractNetwork(chainId)) {\n    throw new Error(\n      `Unsupported chain ID: ${chainId}. Only Abstract networks are supported.`\n    );\n  }\n\n  const address = getContractAddress(contract.addresses, chainId);\n\n  return {\n    ...contract,\n    address,\n  };\n}\n\n// Convenience function that uses the current chain configuration\nexport function getContractWithCurrentChain(\n  contractKey: string\n): ContractInfo & { address: Address } {\n  return getContract(contractKey, chain.id as NetworkId);\n}\n\n// Convenience function to get contract address with current chain\nexport function getContractAddressWithCurrentChain(\n  contractKey: string\n): Address {\n  const contract = findContractInCategories(contractKey);\n\n  if (!contract) {\n    throw new Error(`Contract \"${contractKey}\" not found`);\n  }\n\n  const address = getContractAddress(contract.addresses, chain.id as NetworkId);\n\n  if (!address) {\n    throw new Error(\n      `Contract address not available for \"${contractKey}\" on current chain`\n    );\n  }\n\n  return address;\n}\n",
      "type": "registry:lib"
    }
  ]
}